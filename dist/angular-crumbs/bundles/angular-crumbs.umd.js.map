{"version":3,"file":"angular-crumbs.umd.js","sources":["ng://angular-crumbs/lib/breadcrumb.ts","ng://angular-crumbs/lib/breadcrumb.service.ts","ng://angular-crumbs/lib/breadcrumb.component.ts","ng://angular-crumbs/lib/breadcrumb.module.ts"],"sourcesContent":["import { Route } from \"@angular/router\";\r\n\r\nexport class Breadcrumb {\r\n    displayName: string;\r\n    terminal: boolean;\r\n    url: string;\r\n    route: Route | null;\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { Router, ActivatedRouteSnapshot, Event, NavigationEnd } from '@angular/router';\r\n\r\nimport { Breadcrumb } from './breadcrumb';\r\n\r\n@Injectable()\r\nexport class BreadcrumbService {\r\n    breadcrumbChanged = new EventEmitter<Breadcrumb[]>(false);\r\n\r\n    private breadcrumbs = new Array<Breadcrumb>();\r\n\r\n    constructor(private router: Router) {\r\n        this.router.events.subscribe((routeEvent) => { this.onRouteEvent(routeEvent); });\r\n    }\r\n\r\n    public changeBreadcrumb(route: ActivatedRouteSnapshot, name: string) {\r\n        const rootUrl = this.createRootUrl(route);\r\n        const breadcrumb = this.breadcrumbs.find(function (bc) { return bc.url === rootUrl; });\r\n\r\n        if (!breadcrumb) { return; }\r\n\r\n        breadcrumb.displayName = name;\r\n\r\n        this.breadcrumbChanged.emit(this.breadcrumbs);\r\n    }\r\n\r\n    private onRouteEvent(routeEvent: Event) {\r\n        if (!(routeEvent instanceof NavigationEnd)) { return; }\r\n\r\n        let route = this.router.routerState.root.snapshot;\r\n        let url = '';\r\n\r\n        var breadCrumbIndex = 0;\r\n        var newCrumbs = [];\r\n\r\n        while (route.firstChild != null) {\r\n            route = route.firstChild;\r\n\r\n            if (route.routeConfig === null) { continue; }\r\n            if (!route.routeConfig.path) { continue; }\r\n\r\n            url += `/${this.createUrl(route)}`;\r\n\r\n            if (!route.data['breadcrumb']) { continue; }\r\n\r\n            var newCrumb = this.createBreadcrumb(route, url)\r\n\r\n            if (breadCrumbIndex < this.breadcrumbs.length) {\r\n              var existing = this.breadcrumbs[breadCrumbIndex++];\r\n\r\n              if (existing && existing.route == route.routeConfig) {\r\n                newCrumb.displayName = existing.displayName;\r\n              }\r\n            }\r\n\r\n            newCrumbs.push(newCrumb);\r\n        }\r\n\r\n        this.breadcrumbs = newCrumbs;\r\n        this.breadcrumbChanged.emit(this.breadcrumbs);\r\n    }\r\n\r\n    private createBreadcrumb(route: ActivatedRouteSnapshot, url: string): Breadcrumb {\r\n        return {\r\n            displayName: route.data['breadcrumb'],\r\n            terminal: this.isTerminal(route),\r\n            url: url,\r\n            route: route.routeConfig\r\n        }\r\n    }\r\n\r\n    private isTerminal(route: ActivatedRouteSnapshot) {\r\n        return route.firstChild === null\r\n            || route.firstChild.routeConfig === null\r\n            || !route.firstChild.routeConfig.path;\r\n    }\r\n\r\n    private createUrl(route: ActivatedRouteSnapshot) {\r\n        return route.url.map(function (s) { return s.toString(); }).join('/');\r\n    }\r\n\r\n    private createRootUrl(route: ActivatedRouteSnapshot) {\r\n        let url = '';\r\n        let next = route.root;\r\n\r\n        while (next.firstChild !== null) {\r\n            next = next.firstChild;\r\n\r\n            if (next.routeConfig === null) { continue; }\r\n            if (!next.routeConfig.path) { continue; }\r\n\r\n            url += `/${this.createUrl(next)}`;\r\n\r\n            if (next === route) { break; }\r\n        }\r\n\r\n        return url;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Breadcrumb } from './breadcrumb';\r\nimport { BreadcrumbService } from './breadcrumb.service';\r\n\r\n@Component({\r\n    // tslint:disable-next-line:component-selector\r\n    selector: 'breadcrumb',\r\n    template:\r\n    `<div #template>\r\n    <ng-content></ng-content>\r\n</div>\r\n<div class=\"container\" *ngIf=\"template.children.length == 0\">\r\n    <div class=\"nav-wrapper\">\r\n        <div class=\"breadcrumb\" *ngFor=\"let route of breadcrumbs\" [ngClass]=\"{'last': route.terminal}\">\r\n            <!-- disable link of last item -->\r\n            <a href=\"\" *ngIf=\"!route.terminal\" [routerLink]=\"[route.url]\">{{ route.displayName }}</a>\r\n            <span *ngIf=\"route.terminal\">{{ route.displayName }}</span>\r\n        </div>\r\n    </div>\r\n</div>`\r\n})\r\nexport class BreadcrumbComponent {\r\n    breadcrumbs: Breadcrumb[];\r\n\r\n    constructor(private breadcrumbService: BreadcrumbService) {\r\n        breadcrumbService.breadcrumbChanged.subscribe((crumbs: Breadcrumb[]) => { this.onBreadcrumbChange(crumbs); });\r\n    }\r\n\r\n    private onBreadcrumbChange(crumbs: Breadcrumb[]) {\r\n        this.breadcrumbs = crumbs;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Router } from '@angular/router';\r\n\r\nimport { BreadcrumbService } from './breadcrumb.service';\r\nimport { BreadcrumbComponent } from './breadcrumb.component';\r\n\r\nexport function breadcrumbServiceFactory(router: Router) {\r\n    return new BreadcrumbService(router);\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule, RouterModule],\r\n    providers: [\r\n        { provide: BreadcrumbService, useFactory: breadcrumbServiceFactory, deps: [Router] }\r\n    ],\r\n    declarations: [BreadcrumbComponent],\r\n    exports: [BreadcrumbComponent]\r\n})\r\nexport class BreadcrumbModule { }\r\n"],"names":["EventEmitter","NavigationEnd","Injectable","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","i0.ɵɵprojection","Component","Router","CommonModule","RouterModule","NgModule"],"mappings":"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"}